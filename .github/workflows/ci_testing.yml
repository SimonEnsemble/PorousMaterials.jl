name: Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

concurrency:
  group: 'PorousMaterials'
  cancel-in-progress: true

env:
  julia_version: '1.7.2'



jobs:


  unit-and-doc-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: checkout commit
        uses: actions/checkout@master

      - name: set up Julia
        uses: julia-actions/setup-julia@latest
        with:
          version: ${{env.julia_version}}
      
      - name: build package
        uses: julia-actions/julia-buildpkg@latest
      
      - name: install dependencies
        run: julia --project --color=yes -e 'import Pkg; Pkg.add.(["Documenter", "FIGlet", "Coverage"])'
      
      - name: run tests
        run: julia --project --color=yes --code-coverage -e 'import Pkg; Pkg.test(coverage=true)'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
      
      - name: process test coverage
        uses: julia-actions/julia-processcoverage@v1
      
      - name: upload coverage report
        uses: codecov/codecov-action@v2
        with:
          verbose: true


  cross-platform-os:
    if: github.ref_name == 'master'
    strategy:
      fail-fast: true
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    
    steps:
      - name: checkout commit
        uses: actions/checkout@master

      - name: set up Julia
        uses: julia-actions/setup-julia@latest
        with:
          version: ${{ env.julia_version }}
      
      - name: build package
        uses: julia-actions/julia-buildpkg@latest
      
      - name: install dependencies
        run: julia --project --color=yes -e 'import Pkg; Pkg.add("Documenter")'
        shell: bash
      
      - name: run tests
        run: julia --project --color=yes -e 'import Pkg; Pkg.test()'
        shell: bash

  
  cross-platform-julia:
    if: github.ref_name == 'master'
    strategy:
      fail-fast: true
      matrix:
        julia: ['1.6.4', '1.7.0']
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: checkout commit
        uses: actions/checkout@master

      - name: set up Julia
        uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.julia }}
      
      - name: build package
        uses: julia-actions/julia-buildpkg@latest
      
      - name: install dependencies
        run: julia --project --color=yes -e 'import Pkg; Pkg.add("Documenter")'
        shell: bash
      
      - name: run tests
        run: julia --project --color=yes -e 'import Pkg; Pkg.test()'
        shell: bash


  deploy-docs:
    if: github.ref_name == 'master'
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      DOCUMENTER_KEY: ${{secrets.DOCUMENTER_KEY}}
    
    steps:
      - name: checkout commit
        uses: actions/checkout@master

      - name: set up Julia
        uses: julia-actions/setup-julia@latest
        with:
          version: ${{env.julia_version}}
      
      - name: build package
        uses: julia-actions/julia-buildpkg@latest
      
      - name: install dependencies
        run: julia --project --color=yes -e 'import Pkg; Pkg.add.(["Documenter", "FIGlet"])'
      
      - name: build and deploy docs
        run: julia --project --color=yes ./docs/make.jl
